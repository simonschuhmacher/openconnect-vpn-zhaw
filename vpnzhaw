#!/bin/sh

# Check if script is running as sudo
if [ "$(id -u)" == "0" ]
then

VPN_SERVER="ras.zhaw.ch"
VPN_USER="yourname@students.zhaw.ch"

OC_PID=$(sudo pgrep -x "openconnect")


OC_CMD=
VERBOSE=

show_status() {
    if [ -z "$OC_PID" ]
    then
        echo "😴 OpenConnect currently not running"
    else
        echo "🏃 OpenConnect currently running with PID $OC_PID"
    fi
}

start_oc() {
    if [ -z "$OC_PID" ]
    then
        echo "😴 OpenConnect not running.\n🚀 Starting it..."

        run=(
            "sudo"
            "openconnect-sso"
            "--server $VPN_SERVER \
            --user=$VPN_USER \
            --browser-display-mode hidden \
            -- \
            --background \
            --quiet"
        )

        if [ ! -z $VERBOSE ]
        then 
            ${run[@]}
        else
            ${run[@]} &>/dev/null
        fi

        status=$?
        if [ $status -eq 0 ]
        then
            echo "🥳 OpenConnect connected successfully."
        else 
            echo "😩 Error establishing connection.\n🤔 Try running it again with the --verbose flag."
        fi
    else
        echo "🏃 OpenConnect already running.\n🤔 Try stopping it first."
    fi
}

stop_oc() {
    if [ ! -z "$OC_PID" ]
    then
        echo "🏃 OpenConnect currently running.\n🙅‍♀️ Stopping it."
        kill "$OC_PID"
    else
        echo "😴 OpenConnect currently not running."
    fi
}

for cmd in "$@"
do
    if [ "$cmd" == "--verbose" ]
    then
        VERBOSE=1
    else
        OC_CMD=$cmd
    fi
done

if [ -z "$OC_CMD" ] && [ -z "$OC_PID" ]
then
    start_oc
elif [ -z "$OC_CMD" ] && [ ! -z "$OC_PID" ]
then
    show_status
elif [ "$OC_CMD" == "start" ]
then
    start_oc
elif [ "$OC_CMD" == "status" ]
then
    show_status
elif [ "$OC_CMD" == "stop" ]
then
    stop_oc
fi

# Not running as sudo, restart as sudo
else
    sudo "$0" "$@"
fi